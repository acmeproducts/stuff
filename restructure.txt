that to is an oversimplification. It omits so much it's not worth detailing. 
Instead here's a conceptual structure that splits what is cloud-provider-specific and combines what is common:

             ----------
             | Wrapper |
             ----------
                 |
|---------|             |----------|
| GDrive  |             | Onedrive |
-----------             ------------
- Login                - Login
- Folder Select        - Folder Select
                 |
           <provider-id>
            <folder-id>
                 |
        --------------------
        |  Master Control  |
        --------------------
                 |
|---------|      |       |----------|
| Common  | -----|-------| Specific |
-----------      |       ------------
                 |
------------------------------------
|        User Experience           |
------------------------------------
1. Launch App
2. Select Provider Panel (which door to authenticate through)
3. Select Folder Panel (follow mixed content strategy and rule of allowing parent folder to be selected in same list as subfolders)4. Load Images (load persistent data: stack, notes, tags, metadata, star ratings)
5. Use Application Panel
5a. Display First image - sorted by image file name in center stage from the In Stack
5b. Display number of images for In Proxtab
5c. Folder Hover - Show folder name and number of images
5b. Folder Button Click - Back to Select Folder Panel.  Click Go Back - return to Select Provider Panel
        



A. Wrapper

B. Cloud-Provider-Specific functions: 
1. persistant authentication
2. folder selection (folder-id)
  No Deep Recursive Scans
  Read first 50 folders
  User clicks on a folder
  Mixed content detection: System identifies folders with images + subfolders and allows selection of the parent folder and subfolders
  example: 
  Off of root 50 folders are listed, one of them is Download.User clicks on Download.
  Download folder has 3 images and two subfolders: Folder A and Folder B. 
  User is offered Download, Folder A, Folder B 
  Whatever folder they click on that folder id is passed
   - if they click Download, 3 images are loaded via folder-id, if they click Folder A or Folder B, folder-id is passed
  
3. on-cloud persistence (e.g. Stack, Tags, Notes, Star Ratings)
4. Folder Move
5. Image Delete

Pass: <Folder ID> and <Provider>

C. Common Functions:
1. read custom tEXT metadata and display
2. read tags, notes, star ratings and display
3. display first image in active stack in center stage 
4. details mode
5. folder button hover or back to folder list
6. swipe
6a. move stack (self, other stack)
6b. visual cues
6c. haptic feedback
6d. arrow keys for swiping
6e. change active stack
6f. activate grid mode

D. Details panel
1. Info
  1a. Clickable filename leads to image in popup
  1b. Created Date
  1c. Current folder
  1d. Size
2. Tags
2a. Assign Tag
2b. Delete Tag
3. Notes
3a. Enter notes update on blur
3b. Quality and Content rating: update stars cumulatively
4. Metadata (see v3 for specification and order of field)

5. Grid Mode (see wishlist for spec)
5a. Tag (must call and use tagging from details panel/tag tab
5b. Move between stacks - existing functionality works great as is
5c. Delete Functionality - existing functionality works great for each cloud provider as is - cloud-provider-specific v3 for google drive, v14 for one drive
5d. Export New functionaltiy detailed in wishlist
5e. Folder New Functionality detailed in wishlist


